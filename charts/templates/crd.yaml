{{- if .Values.global.inClusterMode }}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: centralprobes.centralprobe.kube-stack.me
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  labels:
  {{- include "kube-stack.labels" . | nindent 4 }}
spec:
  group: centralprobe.kube-stack.me
  names:
    kind: CentralProbe
    listKind: CentralProbeList
    plural: centralprobes
    singular: centralprobe
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: CentralProbe is the Schema for the centralprobes API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CentralProbeSpec defines the desired state of CentralProbe
            properties:
              selector:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that contains
                        values, a key, and an operator that relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to a
                            set of values. Valid operators are In, NotIn, Exists and
                            DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the operator
                            is In or NotIn, the values array must be non-empty. If the
                            operator is Exists or DoesNotExist, the values array must
                            be empty. This array is replaced during a strategic merge
                            patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator is
                      "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
            required:
            - selector
            type: object
          status:
            description: CentralProbeStatus defines the observed state of CentralProbe
            properties:
              probeStatuses:
                additionalProperties:
                  properties:
                    containerNames:
                      items:
                        type: string
                      type: array
                    podName:
                      type: string
                    podUID:
                      type: string
                    result:
                      type: string
                  required:
                  - podName
                  - podUID
                  - result
                  type: object
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file'
                type: object
            required:
            - probeStatuses
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: podlimiters.podlimiter.kube-stack.me
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  labels:
  {{- include "kube-stack.labels" . | nindent 4 }}
spec:
  group: podlimiter.kube-stack.me
  names:
    kind: Podlimiter
    listKind: PodlimiterList
    plural: podlimiters
    singular: podlimiter
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Podlimiter is the Schema for the podlimiters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PodlimiterSpec defines the desired state of Podlimiter
            properties:
              rules:
                items:
                  properties:
                    enabled:
                      type: boolean
                    fieldSelector:
                      type: string
                    labelSelector:
                      type: string
                    name:
                      type: string
                    threshhold:
                      type: integer
                  required:
                  - enabled
                  - name
                  - threshhold
                  type: object
                type: array
            required:
            - rules
            type: object
          status:
            description: PodlimiterStatus defines the observed state of Podlimiter
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: podmarkers.podmarker.kube-stack.me
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  labels:
  {{- include "kube-stack.labels" . | nindent 4 }}
spec:
  group: podmarker.kube-stack.me
  names:
    kind: PodMarker
    listKind: PodMarkerList
    plural: podmarkers
    singular: podmarker
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: PodMarker is the Schema for the podmarkers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PodMarkerSpec defines the desired state of PodMarker
            properties:
              addLabels:
                items:
                  properties:
                    key:
                      type: string
                    valueFromNode:
                      type: string
                    valueFromPod:
                      type: string
                  required:
                  - key
                  type: object
                type: array
              markLabel:
                properties:
                  name:
                    type: string
                  values:
                    items:
                      properties:
                        replicas:
                          type: integer
                        value:
                          type: string
                        weight:
                          type: integer
                      required:
                      - value
                      type: object
                    type: array
                required:
                - name
                - values
                type: object
              selector:
                description: A label selector is a label query over a set of resources.
                  The result of matchLabels and matchExpressions are ANDed. An empty
                  label selector matches all objects. A null label selector matches
                  no objects.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that contains
                        values, a key, and an operator that relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to a
                            set of values. Valid operators are In, NotIn, Exists and
                            DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the operator
                            is In or NotIn, the values array must be non-empty. If the
                            operator is Exists or DoesNotExist, the values array must
                            be empty. This array is replaced during a strategic merge
                            patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator is
                      "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
            required:
            - selector
            type: object
          status:
            description: PodMarkerStatus defines the observed state of PodMarker
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: resourcestatetransitions.slo.kube-stack.me
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  labels:
  {{- include "kube-stack.labels" . | nindent 4 }}
spec:
  group: slo.kube-stack.me
  names:
    kind: ResourceStateTransition
    listKind: ResourceStateTransitionList
    plural: resourcestatetransitions
    singular: resourcestatetransition
  scope: Cluster
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: ResourceStateTransition is the Schema for the resourcestatetransitions
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ResourceStateTransitionSpec defines the desired state of ResourceStateTransition
            properties:
              events:
                items:
                  description: Event resource event
                  properties:
                    matches:
                      items:
                        properties:
                          fieldSelector:
                            type: string
                          labelSelector:
                            description: "The input will cause an error if it does not
                              follow this form: \n <selector-syntax>         ::= <requirement>
                              | <requirement> \",\" <selector-syntax> <requirement>
                              \            ::= [!] KEY [ <set-based-restriction> | <exact-match-restriction>
                              ] <set-based-restriction>   ::= \"\" | <inclusion-exclusion>
                              <value-set> <inclusion-exclusion>     ::= <inclusion>
                              | <exclusion> <exclusion>               ::= \"notin\"
                              <inclusion>               ::= \"in\" <value-set>               ::=
                              \"(\" <values> \")\" <values>                  ::= VALUE
                              | VALUE \",\" <values> <exact-match-restriction> ::= [\"=\"|\"==\"|\"!=\"]
                              VALUE \n KEY is a sequence of one or more characters following
                              [ DNS_SUBDOMAIN \"/\" ] DNS_LABEL. Max length is 63 characters.
                              VALUE is a sequence of zero or more characters \"([A-Za-z0-9_-\\.])\".
                              Max length is 63 characters. Delimiter is white space:
                              (' ', '\\t') Example of valid syntax: \n \"x in (foo,,baz),y,z
                              notin ()\" gjson express can be used in KEY"
                            type: string
                          selector:
                            description: ResourceSelector the resources which will be
                              selected.
                            properties:
                              apiVersion:
                                description: APIVersion represents the API version of
                                  the target resources.
                                type: string
                              kind:
                                description: Kind represents the Kind of the target
                                  resources.
                                type: string
                              labelSelector:
                                description: A label query over a set of resources.
                                  If name is not empty, labelSelector will be ignored.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a
                                        selector that contains values, a key, and an
                                        operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the
                                            operator is Exists or DoesNotExist, the
                                            values array must be empty. This array is
                                            replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value". The
                                      requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              name:
                                description: Name of the target resource. Default is
                                  empty, which means selecting all resources.
                                type: string
                              namespace:
                                description: Namespace of the target resource. Default
                                  is empty, which means inherit from the parent object
                                  scope.
                                type: string
                            required:
                            - apiVersion
                            - kind
                            type: object
                        required:
                        - selector
                        type: object
                      type: array
                    name:
                      type: string
                  required:
                  - matches
                  - name
                  type: object
                type: array
              selector:
                description: Selector restricts resource types that this StateTransition
                  config applies to.
                properties:
                  apiVersion:
                    description: APIVersion represents the API version of the target
                      resources.
                    type: string
                  kind:
                    description: Kind represents the Kind of the target resources.
                    type: string
                  labelSelector:
                    description: A label query over a set of resources. If name is not
                      empty, labelSelector will be ignored.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements.
                          The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector that
                            contains values, a key, and an operator that relates the
                            key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies
                                to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn, Exists
                                and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If the
                                operator is In or NotIn, the values array must be non-empty.
                                If the operator is Exists or DoesNotExist, the values
                                array must be empty. This array is replaced during a
                                strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A single
                          {key,value} in the matchLabels map is equivalent to an element
                          of matchExpressions, whose key field is "key", the operator
                          is "In", and the values array contains only "value". The requirements
                          are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  name:
                    description: Name of the target resource. Default is empty, which
                      means selecting all resources.
                    type: string
                  namespace:
                    description: Namespace of the target resource. Default is empty,
                      which means inherit from the parent object scope.
                    type: string
                required:
                - apiVersion
                - kind
                type: object
              states:
                items:
                  description: State resource state
                  properties:
                    name:
                      type: string
                  required:
                  - name
                  type: object
                type: array
              transitions:
                items:
                  description: Transition state transition
                  properties:
                    event:
                      type: string
                    source:
                      items:
                        type: string
                      type: array
                    target:
                      type: string
                  required:
                  - event
                  - source
                  - target
                  type: object
                type: array
            required:
            - events
            - selector
            - states
            - transitions
            type: object
          status:
            description: ResourceStateTransitionStatus defines the observed state of
              ResourceStateTransition
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
{{- end }}
